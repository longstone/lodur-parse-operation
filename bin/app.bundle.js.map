{"version":3,"sources":["webpack/bootstrap","external \"lodash\"","external \"winston\"","C:/devel/tests/lodur-parse-operation/src/module/util/lodur-util.js","external \"moment\"","external \"express\"","external \"mongoose\"","C:/devel/tests/lodur-parse-operation/src/schemas/logEntry.js","C:/devel/tests/lodur-parse-operation/src/schemas/schemaU.js","C:/devel/tests/lodur-parse-operation/src/module/entry.js","C:/devel/tests/lodur-parse-operation/src/module/parser-14.js","external \"path\"","C:/devel/tests/lodur-parse-operation/src/module/parser-14util/dateparser.js","C:/devel/tests/lodur-parse-operation/src/module/parser-14util/parseTimeFromLine.js","C:/devel/tests/lodur-parse-operation/src/module/parser-14util/parseGroups.js","C:/devel/tests/lodur-parse-operation/src/module/parser-14util/parseDescription.js","C:/devel/tests/lodur-parse-operation/src/module/parser-14util/parseNumber.js","C:/devel/tests/lodur-parse-operation/src/module/persistence/persistence-service.js","C:/devel/tests/lodur-parse-operation/src/module/telegram/telegram-bot-service.js","external \"node-telegram-bot\"","C:/devel/tests/lodur-parse-operation/src/schemas/lodurEntry.js","C:/devel/tests/lodur-parse-operation/src/schemas/chats.js","external \"request\"","C:/devel/tests/lodur-parse-operation/src/routes/route-index.js","C:/devel/tests/lodur-parse-operation/src/routes/route-update.js","C:/devel/tests/lodur-parse-operation/src/routes/route-update-last-year.js","C:/devel/tests/lodur-parse-operation/src/routes/route-stats.js","C:/devel/tests/lodur-parse-operation/src/schemas/mongo-connect.js","C:/devel/tests/lodur-parse-operation/src/app.js","external \"source-map-support\"","C:\\devel\\tests\\lodur-parse-operation\\node_modules\\source-map-support\\register.js","C:\\devel\\tests\\lodur-parse-operation\\node_modules\\source-map-support\\source-map-support.js","C:\\devel\\tests\\lodur-parse-operation\\node_modules\\webpack\\buildin\\module.js","external \"source-map\"","external \"fs\"","external \"buffer-from\"","C:/devel/tests/lodur-parse-operation/src/module/util/checkEnv.js","external \"serve-favicon\"","external \"express-winston\"","external \"cookie-parser\"","external \"body-parser\"","C:/devel/tests/lodur-parse-operation/src/module/pageloader.js","external \"axios\"","external \"cheerio\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","getLastEntry","list","cache","length","slice","pop","sortArrayByNumber","arr","sort","a","b","number","getSendArray","json","_lastEntryCache","sendArr","entries","reverse","every","item","push","isOrderingForwards","containsDuplicatedID","array","set","Set","map","add","invalid","size","e","success","keys","duplicate","filter","element","console","log","getServerIp","process","env","NODE_IP","getServerPort","NODE_PORT","PORT","mongoose","SchemaUtil","logSchema","Schema","timestamp","Date","text","String","error","description","LogEntry","indexes","models","model","_","constructor","schema","schemaName","this","on","index","Entry","that","group","getTimestamp","getGroup","getDescription","getNumber","nr","Parser","getSplitChar","dateValues","date","substring","time","parseTimeFromLine","dateParser","parse","lines","replace","split","trim","parseGroups","parseNumber","values","parseDescription","ex","logger","moment","args","line","timeStartIndex","indexOf","timeEndIndex","start","subString","join","substr","parseInt","schemas","dependencies","LodurEntry","Chats","query","entriesThisYear","$gte","startOf","toDate","entriesLastYear","subtract","getLastEntryForYear","Promise","resolve","reject","find","limit","exec","err","getLastEntryForLastYear","getEntriesForActualYear","getEntriesForLastYear","createNewLodurEntry","dto","save","findChatsById","chatId","docs","findAllChats","chats","createChat","chat","LodurUtil","TelegramBotService","botInstance","req","request","persistenceService","bot","_initBot","message","JSON","stringify","id","then","firstName","first_name","lastName","last_name","type","username","_send","catch","each","doc","remove","sendMessage","_chatOrChats","count","term","notifyAll","msg","conf","chat_id","body","entrySchema","Number","chatSchema","Chat","lodurUtil","RouteIndex","import","express","pageloader","getRoute","res","load","setHeader","telegramBot","telegramBotService","silent","all","result","lastEntries","lastEntry","_doc","forEach","entry","toString","locale","format","constex","newEntries","thisYear","my_statistic","label","MongoConnection","mongoUri","connectionStringWithoutCredentials","_stripCredentialsConnectionString","connect","useNewUrlParser","useCreateIndex","useUnifiedTopology","uri","indexOfAt","substFrom","install","CheckEnv","toUTCString","stack","path","cookieParser","bodyParser","default","app","winston","createLogger","level","defaultMeta","service","transports","Console","colorize","File","filename","use","urlencoded","extended","static","__dirname","config","telegramToken","telegram_hash","PersistenceService","Bot","token","router","Router","RouteUpdate","RouteUpdateLastYear","RouteStats","next","originalUrl","Error","status","checkEnv","setVariableNames","missingEnv","check","global","MONGOURI","warn","listen","fs","SourceMapConsumer","existsSync","readFileSync","bufferFrom","dynamicRequire","mod","errorFormatterInstalled","uncaughtShimInstalled","emptyCacheBetweenOperations","environment","fileContentsCache","sourceMapCache","reSourceMap","retrieveFileHandlers","retrieveMapHandlers","isInBrowser","window","XMLHttpRequest","handlerExec","arg","ret","retrieveFile","supportRelativeURL","file","url","dir","dirname","match","protocol","startPath","test","drive","contents","xhr","open","send","readyState","responseText","er","retrieveSourceMap","mapSourcePosition","position","sourceMap","source","urlAndMap","sourcesContent","sources","originalPositionFor","originalPosition","CallSiteToString","fileName","fileLocation","isNative","getScriptNameOrSourceURL","isEval","getEvalOrigin","lineNumber","getLineNumber","columnNumber","getColumnNumber","functionName","getFunctionName","addSuffix","isConstructor","isToplevel","typeName","getTypeName","methodName","getMethodName","cloneCallSite","frame","getOwnPropertyNames","getPrototypeOf","wrapCallSite","state","undefined","nextPosition","curPosition","getFileName","column","headerLength","version","originalFunctionName","origin","mapEvalOrigin","prepareStackTrace","errorString","processedStack","getErrorSource","code","Array","printErrorAndExit","stderr","_handle","setBlocking","exit","sourceMapData","sourceMappingURL","fileData","sourceMapHeader","getResponseHeader","lastMatch","re","retrieveSourceMapURL","rawData","originalRetrieveFileHandlers","originalRetrieveMapHandlers","options","overrideRetrieveFile","unshift","overrideRetrieveSourceMap","hookRequire","Module","$compile","_compile","__sourceMapSupport","content","installHandler","handleUncaughtExceptions","isMainThread","origEmit","emit","hasStack","arguments","hasListeners","listeners","apply","resetRetrieveHandlers","webpackPolyfill","deprecate","paths","children","envVar","names","axios","cheerio","Pageloader","parser","url_unused","responseEncoding","htmlToLines","linesToEntries","response","html","data","$","normalizeWhitespace","xmlMode","contentsOfPage","elements","shift"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 27);\n","module.exports = require(\"lodash\");","module.exports = require(\"winston\");","const getLastEntry = function getLastEntryF(list, cache) {\n    if (list.length > 0) {\n        return list.slice(-1).pop();\n    }\n    return cache;\n};\n\nconst isOrderingForwards = function orderingForwardsF(arr) {\n    return arr.length > 0 && arr[0].number < getLastEntry(arr).number;\n};\n\nconst sortArrayByNumber = function sortArrayByNumberF(arr) {\n    arr.sort(function (a, b) {\n        return a.number - b.number;\n    });\n    return arr;\n};\n\nconst getSendArray = function getSendArrayF(json, _lastEntryCache) {\n\n    const sendArr = [];\n\n    if (json && json.length > 0) {\n        const entries = json.slice();\n        sortArrayByNumber(entries);\n        entries.reverse().every(function (item) {\n\n            if (item.number > _lastEntryCache.number) {\n                sendArr.push(item);\n                return true;\n            } else {\n                //we want to break\n                return false;\n            }\n        });\n    }\n    return sendArr.reverse();\n};\n\nconst containsDuplicatedID = function (array) {\n    if (!array) {\n        return false;\n    }\n    const set = new Set();\n    array.map(item => set.add(item.number));\n     const invalid =  !(array.length === set.size);\n    if(invalid){\n        let a = [];\n        array.map(e => a.push(e.number))\n        let success = false;\n        for (var key of set.keys()) {\n            success = false\n            for (var i = 0; i < a.length; i++) {\n                if (a[i] === key && !success) {\n                    a[i] = null;\n                    success = true;\n                }\n            }\n        };\n        let duplicate = a.filter(element => element != null);\n        console.log('error; duplicated element found, number: ', duplicate);\n    }\n    return invalid;\n};\nconst getServerPort = () => {\n    return process.env.NODE_PORT || process.env.PORT || 8080\n};\nconst getServerIp = () => {\n    return process.env.NODE_IP || 'localhost'\n};\nmodule.exports = {\n    getLastEntry,\n    getSendArray,\n    isOrderingForwards,\n    sortArrayByNumber,\n    containsDuplicatedID,\n    getServerIp,\n    getServerPort\n};\n","module.exports = require(\"moment\");","module.exports = require(\"express\");","module.exports = require(\"mongoose\");","const mongoose = require('mongoose');\nconst SchemaUtil = require('./schemaU');\n\nconst logSchema = new mongoose.Schema({\n    timestamp: Date,\n    text: String,\n    error: {},\n    description: String\n});\n\nnew SchemaUtil(logSchema, 'LogEntry').indexes({timestamp: 1, error: -1});\n\nlet LogEntry;\nif (mongoose.models.LogEntry) {\n    LogEntry = mongoose.model('LogEntry');\n} else {\n    LogEntry = mongoose.model('LogEntry', logSchema);\n}\n\n\nmodule.exports = LogEntry;","const _ = require('lodash');\n\n/**\n * Schema Utility\n *\n */\nclass SchemaU {\n    constructor(schema, schemaName) {\n        this.schema = schema;\n        schema.on('index', (error) => {\n            // \"_id index cannot be sparse\"\n            console.log(schemaName + ' index: ' + _.get(error, 'message', 'seems ok'));\n        });\n    }\n\n    indexes(indexes) {\n        this.schema.index(indexes);\n    }\n\n\n}\n\nmodule.exports = SchemaU;","/**\n * Created by longstone on 15/11/14.\n */\n\"use strict\";\nvar Entry = function EntryF(that) {\n    if (!that) {\n        that = {};\n    }\n    this.timestamp = that.timestamp || '';\n    this.group = that.group || '';\n    this.description = that.description || '';\n    this.number = that.number || -1;\n};\n\nEntry.prototype.getTimestamp = function getTimestampF() {\n    return this.timestamp;\n};\nEntry.prototype.getGroup = function getGroupF() {\n    return this.group;\n};\nEntry.prototype.getDescription = function getDescriptionF() {\n    return this.description;\n};\nEntry.prototype.getNumber = function getNumberF() {\n    return this.nr;\n};\n\nmodule.exports = Entry;","/**\n * Created by longstone on 15/11/14.\n */\nimport logger from 'winston';\n\nimport Entry from './entry';\nimport dateParser from './parser-14util/dateparser';\nimport parseTimeFromLine from './parser-14util/parseTimeFromLine';\nimport parseGroups from './parser-14util/parseGroups';\nimport parseDescription from './parser-14util/parseDescription';\nimport parseNumber from './parser-14util/parseNumber';\n\nclass Parser {\n\n    constructor() {\n        const primitiveSepChar = '/';\n        this.getSplitChar = function () {\n            return primitiveSepChar;\n        }\n    }\n\n    getTimestamp(text) {\n        // 07.06.2020   083 - 21:03 Uhr\n        const dateValues = {};\n        dateValues.date = text.substring(0, \"07.06.2020\".length);\n        dateValues.time = parseTimeFromLine(text);\n        return dateParser(dateValues);\n    }\n\n    parse(text) {\n        try {\n            const lines = text.replace(\"  \", \" \").split(this.getSplitChar()).map(s => s.trim());\n            let group = parseGroups(lines[1]);\n            let timestamp = this.getTimestamp(lines[0]);\n            let number =  parseNumber(lines[0]);\n            let description = parseDescription(text);\n            const values = {\n                group,\n                timestamp,\n                description,\n                number\n\n            };\n            return new Entry(values);\n        } catch (ex) {\n            logger.log('error: pageloader parse', ex);\n            logger.log('info: ', text);\n        }\n        return new Entry({});\n    }\n\n\n}\n\nexport default Parser;\n","module.exports = require(\"path\");","\"use strict\";\nvar moment = require('moment');\n/**\n * Created by longstone on 16/12/14.\n */\n/**\n * due to missing java a little bit, this is an array with date and time, named after the public static void main args..\n * @param args\n */\nmodule.exports = function (args) {\n    var date = args.date;\n    var time = args.time;\n    return moment(date + \" \" + time, \"DD.MM.YYYY HH.mm\");\n};","\"use strict\";\nvar moment = require('moment');\n/**\n * Created by longstone on 16/12/14.\n */\n\nmodule.exports = function parseTimeFromLineF(line) {\n    // 07.06.2020   083 - 21:03 Uhr\n    var timeStartIndex = line.indexOf('- ') + 2;\n    var timeEndIndex = line.indexOf(' Uhr');\n    return line.substring(timeStartIndex, timeEndIndex)\n};","\"use strict\";\nvar moment = require('moment');\n/**\n * Created by longstone on 16/12/14.\n */\n\nmodule.exports = function parseTimeFromLineF(line) {\n    return line.split(\"+\");\n};","\"use strict\";\n/**\n * Created by longstone on 31/12/14.\n */\n\nvar nThPositionOf = function NthPositionOf(string, subString, n) {\n    return string.split(subString, n).join(subString).length;\n}\n\nmodule.exports = function parseDescriptionF(text) {\n    const start = nThPositionOf(text, \"/\", 2) + 1;\n    return text.substr(start).trim();\n};\n","/**\n * Created by longstone on 25/03/15.\n */\n\"use strict\";\n// \"07.06.2020   \".length;\nconst stripDate = 13;\nmodule.exports = function parseNumberFromLineF(line) {\n    // 07.06.2020   083 - 21:03 Uhr\n    let result = parseInt(line.substring(stripDate, line.length).substring(0, 3));\n    return result\n};","const moment = require('moment');\n\nclass PersistenceService {\n\n    constructor(schemas, dependencies) {\n        this.LodurEntry = schemas.LodurEntry;\n        this.Chats = schemas.Chats;\n        this.LogEntry = schemas.LogEntry;\n        this.logger = dependencies.logger;\n        this.query = {\n            entriesThisYear: {timestamp: {$gte: moment().startOf('year').toDate()}},\n            entriesLastYear: {timestamp: {$gte: moment().startOf('year').subtract(1,'years').toDate()}}\n        };\n    }\n\n    getLastEntryForYear() {\n        return new Promise((resolve, reject) => {\n            this.LodurEntry.find(this.query.entriesThisYear).sort({number: -1}).limit(1).exec(function (err, entries) {\n                if (err === null) {\n                    resolve(entries)\n                } else {\n                    reject(err);\n                }\n            });\n        });\n    }\n\n    getLastEntryForLastYear() {\n        return new Promise((resolve, reject) => {\n            this.LodurEntry.find(this.query.entriesLastYear).sort({number: -1}).limit(1).exec(function (err, entries) {\n                if (err === null) {\n                    resolve(entries)\n                } else {\n                    reject(err);\n                }\n            });\n        });\n    }\n\n    getEntriesForActualYear() {\n        return this.LodurEntry.find(this.query.entriesThisYear).sort({number: -1}).exec();\n    }\n\n    getEntriesForLastYear() {\n        return this.LodurEntry.find(this.query.entriesLastYear).sort({number: -1}).exec();\n    }\n\n    createNewLodurEntry(dto) {\n        return new this.LodurEntry(dto).save();\n    }\n\n    findChatsById(chatId) {\n        return new Promise((resolve, reject) => {\n            this.Chats.find({chatId}, (err, docs) => {\n                if (err !== null) {\n                    reject({'err-find-chats-by-id': err});\n                } else {\n                    resolve(docs);\n                }\n            })\n        });\n    }\n\n    findAllChats() {\n        return new Promise((resolve, reject) => {\n            this.Chats.find({}, (err, chats) => {\n                if (err != null) {\n                    reject({'err-find-all-chats': err});\n                } else {\n                    resolve(chats);\n                }\n            })\n        });\n    }\n\n    /**\n     *\n     * @param chat {\n                chatId,\n                firstName,\n                lastName,\n                type,\n                username\n            }\n     * @returns {Promise}\n     */\n    createChat(chat) {\n        return new this.Chats(chat).save();\n    }\n\n    log(text, error) {\n        this.logger.log('debug', 'persistence-service logged: ' + text + ' -> ' + error);\n        this.LogEntry.create({\n            timestamp: new Date(),\n            text,\n            error\n        }, function (err) {\n            if (err !== null) {\n                this.logger.log('error', 'persist new received Error', err)\n            }\n        });\n    }\n}\n\nmodule.exports = PersistenceService;","const _ = require('lodash');\nconst LodurUtil = require('./../util/lodur-util');\n\nclass TelegramBotService {\n    constructor(botInstance, dependencies) {\n        this.req = {};\n        this.req.request = dependencies.request;\n        this.persistenceService = dependencies.persistenceService;\n        this.logger = dependencies.logger;\n        this.bot = this._initBot(botInstance, this.logger);\n        this.logger.log('debug', 'telegram-bot-service: construction');\n    }\n\n    _initBot(botInstance, logger) {\n        logger.log('info', 'binding bot commands');\n        const that = this;\n        return botInstance.on('error', (message) => {\n            // prevent bot from crashing\n            this.logger.log('error', 'telegram-bot-service: Bot.onError -> ' + JSON.stringify(message));\n            this.persistenceService.log('telegramMngr - received error: ' + JSON.stringify(message),\n                'Bot.onError:' + message\n            );\n        }).on('start', message => {\n            this.persistenceService.log('telegram-bot-service: cmd start: ', JSON.stringify(message));\n            this.persistenceService.findChatsById(message.chat.id).then(docs => {\n                if (docs.length === 0) {\n                    this.persistenceService.createChat({\n                        chatId: message.chat.id,\n                        firstName: message.chat.first_name,\n                        lastName: message.chat.last_name,\n                        type: message.chat.type,\n                        username: message.chat.username\n                    }).then(success => {\n                        this.persistenceService.log('info', 'registered chat id ' + message.chat.id);\n                        this._send(message.chat.id, 'should be registered right now');\n                    }).catch(err => {\n                        this.persistenceService.log('error', 'telegram-bot-service: error occured ' + JSON.stringify(err));\n                        this._send(message.chat.id, 'should be registered right now');\n                    });\n                } else {\n                    this.persistenceService.log('error', 'already registered chat id ' + message.chat.id);\n                    this._send(message.chat.id, 'you\\'re registered already, doing nothing...');\n                }\n            }).catch(err => this.logger.log('error', 'telegram-bot-service: unknow error occured ' + JSON.stringify(err)));\n        }).on('stop', (message) => {\n            this.persistenceService.log('telegram-bot-service: cmd stop: ', JSON.stringify(message));\n            this.persistenceService.findChatsById(message.chat.id).then(docs => {\n                _.each(docs, doc => doc.remove((error) => {\n                    let sendMessage = 'removed you from notification list';\n                    if (error) {\n                        sendMessage = 'error while removing ' + error;\n                    }\n                    that._send(message.chat.id, sendMessage);\n                }));\n            });\n        }).on('stats', message => {\n            this.persistenceService.log('telegram-bot-service: cmd stats: ' + JSON.stringify(message));\n            this.persistenceService.findAllChats().then(chats => {\n                const sendMessage = 'currently, im notifying ' + TelegramBotService._chatOrChats(chats.length);\n                that._send(message.chat.id, sendMessage);\n            }).catch(err => {\n                console.log('stats', err);\n                that.logger('warn', JSON.stringify(err))\n            });\n        }).on('update', message => {\n            this.persistenceService.log('telegram-bot-service: cmd update: ', JSON.stringify(message));\n                this.req.request('http://'+LodurUtil.getServerIp()+':'+LodurUtil.getServerPort()+'/update', () => {\n                logger.log('info', 'update from bot triggered');\n                that._send(message.chat.id, 'update triggered');\n             });\n\n        }).start();\n    }\n\n    static _chatOrChats(count) {\n        const term = count + ' chat';\n        if (count > 1) {\n            return term + 's';\n        }\n        return term;\n    };\n\n    notifyAll(message) {\n        return new Promise((resolve, reject) => {\n            this.persistenceService.findAllChats().then(chats => {\n                chats.map(chat => {\n                    this._send(chat.chatId, message);\n                    return true;\n                }).every(() => {\n                    resolve(chats);\n                    return false;\n                });\n            }).catch(err => {\n                this.persistenceService.log('telegram-bot-service.notifyAll: error', err);\n                reject({'error-find-all-chats': err})\n            });\n        });\n    }\n\n    _send(id, msg) {\n        const conf = {\n            chat_id: id,\n            text: msg\n        };\n        this.logger.log('debug', 'send ' + JSON.stringify(conf));\n        this.bot.sendMessage(conf, (err, body) => {\n            if (err) {\n                this.persistenceService.log(\n                    'telegramMngr - send: ' + JSON.stringify(body) + 'conf: ' + JSON.stringify(conf),\n                    'id: ' + id + ' text:' + this._.isObject(err) ? JSON.stringify(err) : err + '\\n' + body\n                );\n            } else {\n                this.persistenceService.log('sucessful sent :' + JSON.stringify(body), '');\n            }\n        });\n    }\n\n}\nmodule.exports = TelegramBotService;","module.exports = require(\"node-telegram-bot\");","const mongoose =  require('mongoose');\nconst SchemaUtil = require('./schemaU');\n\nconst entrySchema = new mongoose.Schema({\n    group: [String],\n    timestamp: Date,\n    description: String,\n    number : Number\n});\n\nnew SchemaUtil(entrySchema, 'LodurEntry').indexes({number: 1, timestamp: -1});\nlet LodurEntry;\nif (mongoose.models.LodurEntry) {\n    LodurEntry = mongoose.model('LodurEntry');\n} else {\n    LodurEntry = mongoose.model('LodurEntry', entrySchema);\n}\n\nmodule.exports = LodurEntry;","const mongoose =  require('mongoose');\nconst SchemaUtil = require('./schemaU');\n\nconst chatSchema = new mongoose.Schema({\n    chatId: String,\n    firstName: String,\n    lastName: String,\n    type: String,\n    username: String\n});\n\nnew SchemaUtil(chatSchema, 'Chat').indexes({chatId: 1});\n\nlet Chat;\nif (mongoose.models.Chat) {\n    Chat = mongoose.model('Chat');\n} else {\n    Chat = mongoose.model('Chat', chatSchema);\n}\nmodule.exports = Chat;","module.exports = require(\"request\");","import _ from \"lodash\";\n\nconst LogEntry = require('./../schemas/logEntry');\nconst lodurUtil = require('../module/util/lodur-util');\n\nclass RouteIndex {\n\n    constructor(dependencies) {\n        this.import = {\n            express: dependencies.express,\n            pageloader: dependencies.pageloader\n        };\n    }\n\n    getRoute() {\n        return (req, res) => {\n            this.import.pageloader.load().then(json => {\n                    res.setHeader('charset', 'utf8');\n                    if (lodurUtil.containsDuplicatedID(json)) {\n                        res.json({error: \"duplication, please contact admin\"})\n                    }\n                    res.json(json);\n                },\n                function (err) {\n                    LogEntry.create({\n                        timestamp: new Date(),\n                        text: 'index - pageloader exception',\n                        error: JSON.stringify(err),\n                        description: _.get(err, 'message', 'nomessage') + '\\nstack:\\n' + _.get(err, 'stack', 'nostack')\n                    }, function (err) {\n                        if (err != null) {\n                            console.log('not able to write log Entry ', err);\n                        }\n                    });\n                    res.json({error: err})\n                });\n\n        }\n    }\n}\n\nexport default RouteIndex;","const _ = require('lodash');\nconst moment = require('moment');\nconst lodurUtil = require('../module/util/lodur-util');\n\nclass RouteUpdate {\n    constructor(dependencies) {\n        this.persistenceService = dependencies.persistenceService;\n        this.pageloader = dependencies.pageloader;\n        this.telegramBot = dependencies.telegramBotService;\n        this.logger = dependencies.logger;\n    }\n\n\n    getRoute() {\n        return (req, res) => {\n            let silent = _.get(req, 'query.silent', false);\n            this.logger.log('debug', 'route-update: update requested');\n            Promise.all([\n                this.persistenceService.getLastEntryForYear(),\n                this.pageloader.load()\n            ])\n                .then(result => {\n                    try{\n                        const docs = result[0];\n                        const entries = result[1];\n                        let lastEntries = [];\n                        if (lodurUtil.containsDuplicatedID(entries)) {\n                            this.logger.log('warn', 'duplicated ID in entries: ', JSON.stringify(entries));\n                            this.logger.log('warn', 'docs: ', JSON.stringify(docs));\n                            this.logger.log('warn', 'promise result: ', JSON.stringify(result));\n                        } else {\n                            let lastEntry = {number: -1};\n                            if (docs.length === 1) {\n                                lastEntry = docs[0]._doc;\n                            }\n                            lastEntries = lodurUtil.getSendArray(entries, lastEntry);\n                            this.logger.log('info', 'route-update: elements to send ', lastEntries.length);\n                            if (lastEntries.length > 0) {\n                                lodurUtil.sortArrayByNumber(lastEntries).forEach((item) => {\n                                    try {\n                                        this.logger.log('info', 'route-update: persisting item nr', item.number);\n                                        const entry = {\n                                            number: item.number,\n                                            group: item.group,\n                                            timestamp: item.timestamp,\n                                            description: item.description\n                                        };\n                                        this.persistenceService.createNewLodurEntry(entry).then(() => {\n                                            this.logger.log('info', 'route-update: persisted item nr', item.number);\n\n                                            const message = \"Wer:  \" + item.group.toString() + \"\\n\"\n                                                + \"Was:  \" + item.description + \"\\n\"\n                                                + \"Wann: \" + moment(item.timestamp).locale('de').format('HH:mm DD.MM.YY') + \"\\n\"\n                                                + \"Nummer: \" + item.number;\n                                            this.telegramBot.notifyAll(message).then((chats) => this.logger.log('info', 'total ' + chats.length + ' notified'));\n\n                                        }).catch(error => this.logger.log('error', 'persist new Entry Error' + JSON.stringify(error)));\n                                    } catch (constex) {\n                                        this.logger.log('info', 'woohwohohwohowow' + constex);\n                                    }\n                                });\n                            } else if (silent) {\n                                this.logger.log('debug', 'no update, latest was: ' + JSON.stringify(lastEntry));\n                            }\n                        }\n                        res.json({newEntries: lastEntries});\n                    } catch (ex){\n                        this.logger.log('error', 'route-update: exception occured: ' + JSON.stringify(ex));\n                        res.json({'error-catch':ex});\n                    }\n                })\n                .catch((err) => {\n                    this.persistenceService.log('error', 'route-update Promise.all err: ' + JSON.stringify(err));\n                    res.json({error: err });\n                })\n\n        }\n    }\n}\nmodule.exports = RouteUpdate;\n","const _ = require('lodash');\nconst moment = require('moment');\nconst lodurUtil = require('../module/util/lodur-util');\n\n\nclass RouteUpdate {\n    constructor(dependencies) {\n        this.persistenceService = dependencies.persistenceService;\n        this.pageloader = dependencies.pageloader;\n        this.telegramBot = dependencies.telegramBotService;\n        this.logger = dependencies.logger;\n    }\n\n\n    getRoute() {\n        return (req, res) => {\n            let silent = _.get(req, 'query.silent', false);\n            this.logger.log('debug', 'route-update: update requested');\n             Promise.all([\n                this.persistenceService.getLastEntryForLastYear(),\n                this.pageloader(\"https://www.lodur-zh.ch/duebendorf/index.php?modul=6&year=\" + moment().startOf('year').subtract(1,'years').get('year'))\n            ])\n                .then(result => {\n                    try{\n                    const docs = result[0];\n                    const entries = result[1];\n                    let lastEntries = [];\n                    if (lodurUtil.containsDuplicatedID(entries)) {\n                        this.logger.log('warn', 'duplicated ID in entries: ', JSON.stringify(lastEntries));\n                    } else {\n                        let lastEntry = {number: -1};\n                        if (docs.length === 1) {\n                            lastEntry = docs[0]._doc;\n                        }\n                        lastEntries = lodurUtil.getSendArray(entries, lastEntry);\n                        this.logger.log('info', 'route-update: elements to send ', lastEntries.length);\n                        if (lastEntries.length > 0) {\n                            lodurUtil.sortArrayByNumber(lastEntries).forEach((item) => {\n                                try {\n                                this.logger.log('info', 'route-update: persisting item nr', item.number);\n                                const entry = {\n                                    number: item.number,\n                                    group: item.group,\n                                    timestamp: item.timestamp,\n                                    description: item.description\n                                };\n                                this.persistenceService.createNewLodurEntry(entry).then(() => {\n                                    this.logger.log('info', 'route-update: persisted item nr', item.number);\n\n                                        const message = \"Wer:  \" + item.group.toString() + \"\\n\"\n                                            + \"Was:  \" + item.description + \"\\n\"\n                                            + \"Wann: \" + moment(item.timestamp).locale('de').format('HH:mm DD.MM.YY') + \"\\n\"\n                                            + \"Nummer: \" + item.number;\n                                        this.telegramBot.notifyAll(message).then( (chats) => this.logger.log('info','total '+chats.length+' notified'));\n\n                                    }).catch(error => this.logger.log('error', 'persist new Entry Error' + JSON.stringify(error)));\n                                }catch (constex){\n                                    this.logger.log('info','woohwohohwohowow'+constex);\n                                }\n                            });\n                        } else if (silent) {\n                            this.logger.log('debug', 'no update, latest was: ' + JSON.stringify(lastEntry));\n                        }\n                    }\n                    res.json({newEntries: lastEntries});\n                    } catch (ex){\n                        this.logger.log('error', 'route-update: exception occured: ' + JSON.stringify(ex));\n                        res.json({'error-catch':ex});\n                    }\n                })\n                .catch((err) => {\n                    this.persistenceService.log('error', 'route-update Promise.all err: ' + JSON.stringify(err));\n                    res.json({error: err });\n                })\n\n        }\n    }\n}\nmodule.exports = RouteUpdate;\n","class RouteIndex {\n\n    constructor(dependencies) {\n        this.import = {\n            express: dependencies.express,\n            persistenceService: dependencies.persistenceService,\n            logger: dependencies.logger\n        };\n    }\n\n    // maybe there is something for https://www.dasheroo.com/\n    getRoute() {\n        return (req, res) => {\n            this.import.persistenceService.getEntriesForActualYear().then(\n                thisYear => res.json({\n                    my_statistic: {\n                        type: 'integer',\n                        value: thisYear.length,\n                        label: 'Einsätze im aktuellen Jahr'\n                    }\n                })\n            );\n        }\n    }\n}\n\n\nmodule.exports = RouteIndex;\n","class MongoConnection {\n    constructor(mongoose, mongoUri, logger) {\n        const connectionStringWithoutCredentials = MongoConnection._stripCredentialsConnectionString(mongoUri);\n        mongoose.connect(mongoUri, {\n            useNewUrlParser: true,\n            useCreateIndex: true,\n            useUnifiedTopology: true\n        }).then(\n            () => logger.log('info', 'Succeeded connected to: ' + connectionStringWithoutCredentials),\n            err => logger.log('error', 'ERROR connecting to: ' + connectionStringWithoutCredentials + '. ' + err)\n        ).catch(err => console.log('mongoose-connect: unhandled error', err));\n    }\n\n    static _stripCredentialsConnectionString(uri) {\n        const indexOfAt = uri.indexOf('@');\n        let substFrom = 0;\n        if (indexOfAt > 0) {\n            substFrom = indexOfAt;\n        }\n        return uri.substring(substFrom);\n    }\n\n}\n\nmodule.exports = MongoConnection;\n","\"use strict\";\nimport Parser from \"./module/parser-14\";\n\nrequire('source-map-support').install();\nimport 'source-map-support/register';\nimport PersistenceService from './module/persistence/persistence-service';\nimport TelegramBotService from './module/telegram/telegram-bot-service';\nimport Bot from 'node-telegram-bot'\nimport LodurEntry from './schemas/lodurEntry';\nimport Chats from './schemas/chats';\nimport LogEntry from './schemas/logEntry'\nimport _ from 'lodash';\nimport request from 'request';\nimport express from 'express';\nimport winston from 'winston';\nimport RouteIndex from './routes/route-index';\nimport RouteUpdate from './routes/route-update';\nimport RouteUpdateLastYear from './routes/route-update-last-year';\nimport RouteStats from './routes/route-stats';\nimport LodurUtil from './module/util/lodur-util';\nimport MongoConnection from './schemas/mongo-connect';\n//# sourceMappingURL=./app.bundle.js.map\n\nconst CheckEnv = require('./module/util/checkEnv');\nprocess.on('uncaughtException', function (err) {\n    LogEntry.create({\n        timestamp: new Date(),\n        text: 'app.js - uncaughtException',\n        error: JSON.stringify(err),\n        description: _.get(err, 'message', 'nomessage') + '\\nstack:\\n' + _.get(err, 'stack', 'nostack')\n    }, function (err) {\n        if (err === null) {\n            return;\n        }\n        console.log('persist new Entry ', err);\n    });\n    console.error((new Date).toUTCString() + ' uncaughtException:');\n    console.error(err);\n    console.error(err.message);\n    console.error(err.stack);\n});\n\nconst path = require('path');\nconst favicon = require('serve-favicon');\nconst expressWinston = require('express-winston');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst mongoose = require('mongoose');\nconst Pageloader = require('./module/pageloader');\nconst pageloader = new Pageloader.default();\nconst app = express();\n\n\n// uncomment after placing your favicon in /public\n// @todo place favicon in /public\n//app.use(favicon(__dirname + '/public/favicon.ico'));\nconst logger = winston.createLogger({\n    level: 'info',\n    format: winston.format.json(),\n    defaultMeta: { service: 'user-service' },\n    transports: [\n        //\n        // - Write all logs with level `error` and below to `error.log`\n        // - Write all logs with level `info` and below to `combined.log`\n        //\n        new winston.transports.Console({\n            colorize: true,\n            level: 'debug'\n        }),\n        new winston.transports.File({ filename: 'error.log', level: 'error' }),\n        new winston.transports.File({ filename: 'combined.log' }),\n    ],\n});\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\nconst config = {telegramToken: process.env.telegram_hash};\nconst dependencies = {\n    express,\n    pageloader,\n    persistenceService: new PersistenceService({\n        Chats,\n        LogEntry,\n        LodurEntry\n    }, {logger}),\n    logger,\n    request,\n    telegramBotService: null\n};\nconst bot = new Bot({token: config.telegramToken});\ndependencies.telegramBotService = new TelegramBotService(bot, dependencies);\nconst router = express.Router();\nrouter.get('/', new RouteIndex(dependencies).getRoute());\nrouter.get('/update', new RouteUpdate(dependencies).getRoute());\nrouter.get('/update-last-year', new RouteUpdateLastYear(dependencies).getRoute());\nrouter.get('/stats-dasheroo', new RouteStats(dependencies).getRoute());\napp.use('/', router);\n// catch 404 and forward to error handler\napp.use(function (req, res, next) {\n    logger.log('warn', 'errorhandler ', req.originalUrl);\n    const err = new Error('Not Found');\n    err.status = 404;\n    next(err);\n});\nconst checkEnv = new CheckEnv(process.env);\ncheckEnv.setVariableNames(['MONGOURI', 'telegram_hash']);\nconst missingEnv = checkEnv.check();\nif (missingEnv.length > 0) {\n    logger.log('warn', 'missing process.env variables: ', missingEnv);\n}\nmongoose.Promise = global.Promise;\n\nconst options = {promiseLibrary: global.Promise};\n\nconst mongoUri = process.env.MONGOURI || \"mongodb://localhost:27017/lodur\";\nnew MongoConnection(mongoose, mongoUri, logger);\n\n// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n    logger.level = 'silly';\n    logger.warn('env:development');\n    mongoose.set('debug', true);\n    app.use(function (err, req, res, next) {\n        res.status(err.status || 500);\n        res.json({\n            message: err.message,\n            error: err\n        });\n    });\n} else {\n    // production error handler\n    // no stacktraces leaked to user\n    app.use(function (err, req, res, next) {\n        logger.log('error', err);\n        res.status(err.status || 500);\n        res.json({\n            message: err.message,\n            error: {}\n        });\n    });\n}\n\napp.listen(LodurUtil.getServerPort(), LodurUtil.getServerIp(), function () {\n    logger.log('info', \"Listening on server_port: \" + LodurUtil.getServerPort());\n    logger.log('info', \"Listening on server_ip_address: \" + LodurUtil.getServerIp());\n});\n\nexport default app;\n","module.exports = require(\"source-map-support\");","require('./').install();\n","var SourceMapConsumer = require('source-map').SourceMapConsumer;\nvar path = require('path');\n\nvar fs;\ntry {\n  fs = require('fs');\n  if (!fs.existsSync || !fs.readFileSync) {\n    // fs doesn't have all methods we need\n    fs = null;\n  }\n} catch (err) {\n  /* nop */\n}\n\nvar bufferFrom = require('buffer-from');\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param {NodeModule} mod\n * @param {string} request\n */\nfunction dynamicRequire(mod, request) {\n  return mod.require(request);\n}\n\n// Only install once if called multiple times\nvar errorFormatterInstalled = false;\nvar uncaughtShimInstalled = false;\n\n// If true, the caches are reset before a stack trace formatting operation\nvar emptyCacheBetweenOperations = false;\n\n// Supports {browser, node, auto}\nvar environment = \"auto\";\n\n// Maps a file path to a string containing the file contents\nvar fileContentsCache = {};\n\n// Maps a file path to a source map for that file\nvar sourceMapCache = {};\n\n// Regex for detecting source maps\nvar reSourceMap = /^data:application\\/json[^,]+base64,/;\n\n// Priority list of retrieve handlers\nvar retrieveFileHandlers = [];\nvar retrieveMapHandlers = [];\n\nfunction isInBrowser() {\n  if (environment === \"browser\")\n    return true;\n  if (environment === \"node\")\n    return false;\n  return ((typeof window !== 'undefined') && (typeof XMLHttpRequest === 'function') && !(window.require && window.module && window.process && window.process.type === \"renderer\"));\n}\n\nfunction hasGlobalProcessEventEmitter() {\n  return ((typeof process === 'object') && (process !== null) && (typeof process.on === 'function'));\n}\n\nfunction handlerExec(list) {\n  return function(arg) {\n    for (var i = 0; i < list.length; i++) {\n      var ret = list[i](arg);\n      if (ret) {\n        return ret;\n      }\n    }\n    return null;\n  };\n}\n\nvar retrieveFile = handlerExec(retrieveFileHandlers);\n\nretrieveFileHandlers.push(function(path) {\n  // Trim the path to make sure there is no extra whitespace.\n  path = path.trim();\n  if (/^file:/.test(path)) {\n    // existsSync/readFileSync can't handle file protocol, but once stripped, it works\n    path = path.replace(/file:\\/\\/\\/(\\w:)?/, function(protocol, drive) {\n      return drive ?\n        '' : // file:///C:/dir/file -> C:/dir/file\n        '/'; // file:///root-dir/file -> /root-dir/file\n    });\n  }\n  if (path in fileContentsCache) {\n    return fileContentsCache[path];\n  }\n\n  var contents = '';\n  try {\n    if (!fs) {\n      // Use SJAX if we are in the browser\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', path, /** async */ false);\n      xhr.send(null);\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        contents = xhr.responseText;\n      }\n    } else if (fs.existsSync(path)) {\n      // Otherwise, use the filesystem\n      contents = fs.readFileSync(path, 'utf8');\n    }\n  } catch (er) {\n    /* ignore any errors */\n  }\n\n  return fileContentsCache[path] = contents;\n});\n\n// Support URLs relative to a directory, but be careful about a protocol prefix\n// in case we are in the browser (i.e. directories may start with \"http://\" or \"file:///\")\nfunction supportRelativeURL(file, url) {\n  if (!file) return url;\n  var dir = path.dirname(file);\n  var match = /^\\w+:\\/\\/[^\\/]*/.exec(dir);\n  var protocol = match ? match[0] : '';\n  var startPath = dir.slice(protocol.length);\n  if (protocol && /^\\/\\w\\:/.test(startPath)) {\n    // handle file:///C:/ paths\n    protocol += '/';\n    return protocol + path.resolve(dir.slice(protocol.length), url).replace(/\\\\/g, '/');\n  }\n  return protocol + path.resolve(dir.slice(protocol.length), url);\n}\n\nfunction retrieveSourceMapURL(source) {\n  var fileData;\n\n  if (isInBrowser()) {\n     try {\n       var xhr = new XMLHttpRequest();\n       xhr.open('GET', source, false);\n       xhr.send(null);\n       fileData = xhr.readyState === 4 ? xhr.responseText : null;\n\n       // Support providing a sourceMappingURL via the SourceMap header\n       var sourceMapHeader = xhr.getResponseHeader(\"SourceMap\") ||\n                             xhr.getResponseHeader(\"X-SourceMap\");\n       if (sourceMapHeader) {\n         return sourceMapHeader;\n       }\n     } catch (e) {\n     }\n  }\n\n  // Get the URL of the source map\n  fileData = retrieveFile(source);\n  var re = /(?:\\/\\/[@#][\\s]*sourceMappingURL=([^\\s'\"]+)[\\s]*$)|(?:\\/\\*[@#][\\s]*sourceMappingURL=([^\\s*'\"]+)[\\s]*(?:\\*\\/)[\\s]*$)/mg;\n  // Keep executing the search to find the *last* sourceMappingURL to avoid\n  // picking up sourceMappingURLs from comments, strings, etc.\n  var lastMatch, match;\n  while (match = re.exec(fileData)) lastMatch = match;\n  if (!lastMatch) return null;\n  return lastMatch[1];\n};\n\n// Can be overridden by the retrieveSourceMap option to install. Takes a\n// generated source filename; returns a {map, optional url} object, or null if\n// there is no source map.  The map field may be either a string or the parsed\n// JSON object (ie, it must be a valid argument to the SourceMapConsumer\n// constructor).\nvar retrieveSourceMap = handlerExec(retrieveMapHandlers);\nretrieveMapHandlers.push(function(source) {\n  var sourceMappingURL = retrieveSourceMapURL(source);\n  if (!sourceMappingURL) return null;\n\n  // Read the contents of the source map\n  var sourceMapData;\n  if (reSourceMap.test(sourceMappingURL)) {\n    // Support source map URL as a data url\n    var rawData = sourceMappingURL.slice(sourceMappingURL.indexOf(',') + 1);\n    sourceMapData = bufferFrom(rawData, \"base64\").toString();\n    sourceMappingURL = source;\n  } else {\n    // Support source map URLs relative to the source URL\n    sourceMappingURL = supportRelativeURL(source, sourceMappingURL);\n    sourceMapData = retrieveFile(sourceMappingURL);\n  }\n\n  if (!sourceMapData) {\n    return null;\n  }\n\n  return {\n    url: sourceMappingURL,\n    map: sourceMapData\n  };\n});\n\nfunction mapSourcePosition(position) {\n  var sourceMap = sourceMapCache[position.source];\n  if (!sourceMap) {\n    // Call the (overrideable) retrieveSourceMap function to get the source map.\n    var urlAndMap = retrieveSourceMap(position.source);\n    if (urlAndMap) {\n      sourceMap = sourceMapCache[position.source] = {\n        url: urlAndMap.url,\n        map: new SourceMapConsumer(urlAndMap.map)\n      };\n\n      // Load all sources stored inline with the source map into the file cache\n      // to pretend like they are already loaded. They may not exist on disk.\n      if (sourceMap.map.sourcesContent) {\n        sourceMap.map.sources.forEach(function(source, i) {\n          var contents = sourceMap.map.sourcesContent[i];\n          if (contents) {\n            var url = supportRelativeURL(sourceMap.url, source);\n            fileContentsCache[url] = contents;\n          }\n        });\n      }\n    } else {\n      sourceMap = sourceMapCache[position.source] = {\n        url: null,\n        map: null\n      };\n    }\n  }\n\n  // Resolve the source URL relative to the URL of the source map\n  if (sourceMap && sourceMap.map && typeof sourceMap.map.originalPositionFor === 'function') {\n    var originalPosition = sourceMap.map.originalPositionFor(position);\n\n    // Only return the original position if a matching line was found. If no\n    // matching line is found then we return position instead, which will cause\n    // the stack trace to print the path and line for the compiled file. It is\n    // better to give a precise location in the compiled file than a vague\n    // location in the original file.\n    if (originalPosition.source !== null) {\n      originalPosition.source = supportRelativeURL(\n        sourceMap.url, originalPosition.source);\n      return originalPosition;\n    }\n  }\n\n  return position;\n}\n\n// Parses code generated by FormatEvalOrigin(), a function inside V8:\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js\nfunction mapEvalOrigin(origin) {\n  // Most eval() calls are in this format\n  var match = /^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(origin);\n  if (match) {\n    var position = mapSourcePosition({\n      source: match[2],\n      line: +match[3],\n      column: match[4] - 1\n    });\n    return 'eval at ' + match[1] + ' (' + position.source + ':' +\n      position.line + ':' + (position.column + 1) + ')';\n  }\n\n  // Parse nested eval() calls using recursion\n  match = /^eval at ([^(]+) \\((.+)\\)$/.exec(origin);\n  if (match) {\n    return 'eval at ' + match[1] + ' (' + mapEvalOrigin(match[2]) + ')';\n  }\n\n  // Make sure we still return useful information if we didn't find anything\n  return origin;\n}\n\n// This is copied almost verbatim from the V8 source code at\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js. The\n// implementation of wrapCallSite() used to just forward to the actual source\n// code of CallSite.prototype.toString but unfortunately a new release of V8\n// did something to the prototype chain and broke the shim. The only fix I\n// could find was copy/paste.\nfunction CallSiteToString() {\n  var fileName;\n  var fileLocation = \"\";\n  if (this.isNative()) {\n    fileLocation = \"native\";\n  } else {\n    fileName = this.getScriptNameOrSourceURL();\n    if (!fileName && this.isEval()) {\n      fileLocation = this.getEvalOrigin();\n      fileLocation += \", \";  // Expecting source position to follow.\n    }\n\n    if (fileName) {\n      fileLocation += fileName;\n    } else {\n      // Source code does not originate from a file and is not native, but we\n      // can still get the source position inside the source string, e.g. in\n      // an eval string.\n      fileLocation += \"<anonymous>\";\n    }\n    var lineNumber = this.getLineNumber();\n    if (lineNumber != null) {\n      fileLocation += \":\" + lineNumber;\n      var columnNumber = this.getColumnNumber();\n      if (columnNumber) {\n        fileLocation += \":\" + columnNumber;\n      }\n    }\n  }\n\n  var line = \"\";\n  var functionName = this.getFunctionName();\n  var addSuffix = true;\n  var isConstructor = this.isConstructor();\n  var isMethodCall = !(this.isToplevel() || isConstructor);\n  if (isMethodCall) {\n    var typeName = this.getTypeName();\n    // Fixes shim to be backward compatable with Node v0 to v4\n    if (typeName === \"[object Object]\") {\n      typeName = \"null\";\n    }\n    var methodName = this.getMethodName();\n    if (functionName) {\n      if (typeName && functionName.indexOf(typeName) != 0) {\n        line += typeName + \".\";\n      }\n      line += functionName;\n      if (methodName && functionName.indexOf(\".\" + methodName) != functionName.length - methodName.length - 1) {\n        line += \" [as \" + methodName + \"]\";\n      }\n    } else {\n      line += typeName + \".\" + (methodName || \"<anonymous>\");\n    }\n  } else if (isConstructor) {\n    line += \"new \" + (functionName || \"<anonymous>\");\n  } else if (functionName) {\n    line += functionName;\n  } else {\n    line += fileLocation;\n    addSuffix = false;\n  }\n  if (addSuffix) {\n    line += \" (\" + fileLocation + \")\";\n  }\n  return line;\n}\n\nfunction cloneCallSite(frame) {\n  var object = {};\n  Object.getOwnPropertyNames(Object.getPrototypeOf(frame)).forEach(function(name) {\n    object[name] = /^(?:is|get)/.test(name) ? function() { return frame[name].call(frame); } : frame[name];\n  });\n  object.toString = CallSiteToString;\n  return object;\n}\n\nfunction wrapCallSite(frame, state) {\n  // provides interface backward compatibility\n  if (state === undefined) {\n    state = { nextPosition: null, curPosition: null }\n  }\n  if(frame.isNative()) {\n    state.curPosition = null;\n    return frame;\n  }\n\n  // Most call sites will return the source file from getFileName(), but code\n  // passed to eval() ending in \"//# sourceURL=...\" will return the source file\n  // from getScriptNameOrSourceURL() instead\n  var source = frame.getFileName() || frame.getScriptNameOrSourceURL();\n  if (source) {\n    var line = frame.getLineNumber();\n    var column = frame.getColumnNumber() - 1;\n\n    // Fix position in Node where some (internal) code is prepended.\n    // See https://github.com/evanw/node-source-map-support/issues/36\n    // Header removed in node at ^10.16 || >=11.11.0\n    // v11 is not an LTS candidate, we can just test the one version with it.\n    // Test node versions for: 10.16-19, 10.20+, 12-19, 20-99, 100+, or 11.11\n    var noHeader = /^v(10\\.1[6-9]|10\\.[2-9][0-9]|10\\.[0-9]{3,}|1[2-9]\\d*|[2-9]\\d|\\d{3,}|11\\.11)/;\n    var headerLength = noHeader.test(process.version) ? 0 : 62;\n    if (line === 1 && column > headerLength && !isInBrowser() && !frame.isEval()) {\n      column -= headerLength;\n    }\n\n    var position = mapSourcePosition({\n      source: source,\n      line: line,\n      column: column\n    });\n    state.curPosition = position;\n    frame = cloneCallSite(frame);\n    var originalFunctionName = frame.getFunctionName;\n    frame.getFunctionName = function() {\n      if (state.nextPosition == null) {\n        return originalFunctionName();\n      }\n      return state.nextPosition.name || originalFunctionName();\n    };\n    frame.getFileName = function() { return position.source; };\n    frame.getLineNumber = function() { return position.line; };\n    frame.getColumnNumber = function() { return position.column + 1; };\n    frame.getScriptNameOrSourceURL = function() { return position.source; };\n    return frame;\n  }\n\n  // Code called using eval() needs special handling\n  var origin = frame.isEval() && frame.getEvalOrigin();\n  if (origin) {\n    origin = mapEvalOrigin(origin);\n    frame = cloneCallSite(frame);\n    frame.getEvalOrigin = function() { return origin; };\n    return frame;\n  }\n\n  // If we get here then we were unable to change the source position\n  return frame;\n}\n\n// This function is part of the V8 stack trace API, for more info see:\n// https://v8.dev/docs/stack-trace-api\nfunction prepareStackTrace(error, stack) {\n  if (emptyCacheBetweenOperations) {\n    fileContentsCache = {};\n    sourceMapCache = {};\n  }\n\n  var name = error.name || 'Error';\n  var message = error.message || '';\n  var errorString = name + \": \" + message;\n\n  var state = { nextPosition: null, curPosition: null };\n  var processedStack = [];\n  for (var i = stack.length - 1; i >= 0; i--) {\n    processedStack.push('\\n    at ' + wrapCallSite(stack[i], state));\n    state.nextPosition = state.curPosition;\n  }\n  state.curPosition = state.nextPosition = null;\n  return errorString + processedStack.reverse().join('');\n}\n\n// Generate position and snippet of original source with pointer\nfunction getErrorSource(error) {\n  var match = /\\n    at [^(]+ \\((.*):(\\d+):(\\d+)\\)/.exec(error.stack);\n  if (match) {\n    var source = match[1];\n    var line = +match[2];\n    var column = +match[3];\n\n    // Support the inline sourceContents inside the source map\n    var contents = fileContentsCache[source];\n\n    // Support files on disk\n    if (!contents && fs && fs.existsSync(source)) {\n      try {\n        contents = fs.readFileSync(source, 'utf8');\n      } catch (er) {\n        contents = '';\n      }\n    }\n\n    // Format the line from the original source code like node does\n    if (contents) {\n      var code = contents.split(/(?:\\r\\n|\\r|\\n)/)[line - 1];\n      if (code) {\n        return source + ':' + line + '\\n' + code + '\\n' +\n          new Array(column).join(' ') + '^';\n      }\n    }\n  }\n  return null;\n}\n\nfunction printErrorAndExit (error) {\n  var source = getErrorSource(error);\n\n  // Ensure error is printed synchronously and not truncated\n  if (process.stderr._handle && process.stderr._handle.setBlocking) {\n    process.stderr._handle.setBlocking(true);\n  }\n\n  if (source) {\n    console.error();\n    console.error(source);\n  }\n\n  console.error(error.stack);\n  process.exit(1);\n}\n\nfunction shimEmitUncaughtException () {\n  var origEmit = process.emit;\n\n  process.emit = function (type) {\n    if (type === 'uncaughtException') {\n      var hasStack = (arguments[1] && arguments[1].stack);\n      var hasListeners = (this.listeners(type).length > 0);\n\n      if (hasStack && !hasListeners) {\n        return printErrorAndExit(arguments[1]);\n      }\n    }\n\n    return origEmit.apply(this, arguments);\n  };\n}\n\nvar originalRetrieveFileHandlers = retrieveFileHandlers.slice(0);\nvar originalRetrieveMapHandlers = retrieveMapHandlers.slice(0);\n\nexports.wrapCallSite = wrapCallSite;\nexports.getErrorSource = getErrorSource;\nexports.mapSourcePosition = mapSourcePosition;\nexports.retrieveSourceMap = retrieveSourceMap;\n\nexports.install = function(options) {\n  options = options || {};\n\n  if (options.environment) {\n    environment = options.environment;\n    if ([\"node\", \"browser\", \"auto\"].indexOf(environment) === -1) {\n      throw new Error(\"environment \" + environment + \" was unknown. Available options are {auto, browser, node}\")\n    }\n  }\n\n  // Allow sources to be found by methods other than reading the files\n  // directly from disk.\n  if (options.retrieveFile) {\n    if (options.overrideRetrieveFile) {\n      retrieveFileHandlers.length = 0;\n    }\n\n    retrieveFileHandlers.unshift(options.retrieveFile);\n  }\n\n  // Allow source maps to be found by methods other than reading the files\n  // directly from disk.\n  if (options.retrieveSourceMap) {\n    if (options.overrideRetrieveSourceMap) {\n      retrieveMapHandlers.length = 0;\n    }\n\n    retrieveMapHandlers.unshift(options.retrieveSourceMap);\n  }\n\n  // Support runtime transpilers that include inline source maps\n  if (options.hookRequire && !isInBrowser()) {\n    // Use dynamicRequire to avoid including in browser bundles\n    var Module = dynamicRequire(module, 'module');\n    var $compile = Module.prototype._compile;\n\n    if (!$compile.__sourceMapSupport) {\n      Module.prototype._compile = function(content, filename) {\n        fileContentsCache[filename] = content;\n        sourceMapCache[filename] = undefined;\n        return $compile.call(this, content, filename);\n      };\n\n      Module.prototype._compile.__sourceMapSupport = true;\n    }\n  }\n\n  // Configure options\n  if (!emptyCacheBetweenOperations) {\n    emptyCacheBetweenOperations = 'emptyCacheBetweenOperations' in options ?\n      options.emptyCacheBetweenOperations : false;\n  }\n\n  // Install the error reformatter\n  if (!errorFormatterInstalled) {\n    errorFormatterInstalled = true;\n    Error.prepareStackTrace = prepareStackTrace;\n  }\n\n  if (!uncaughtShimInstalled) {\n    var installHandler = 'handleUncaughtExceptions' in options ?\n      options.handleUncaughtExceptions : true;\n\n    // Do not override 'uncaughtException' with our own handler in Node.js\n    // Worker threads. Workers pass the error to the main thread as an event,\n    // rather than printing something to stderr and exiting.\n    try {\n      // We need to use `dynamicRequire` because `require` on it's own will be optimized by WebPack/Browserify.\n      var worker_threads = dynamicRequire(module, 'worker_threads');\n      if (worker_threads.isMainThread === false) {\n        installHandler = false;\n      }\n    } catch(e) {}\n\n    // Provide the option to not install the uncaught exception handler. This is\n    // to support other uncaught exception handlers (in test frameworks, for\n    // example). If this handler is not installed and there are no other uncaught\n    // exception handlers, uncaught exceptions will be caught by node's built-in\n    // exception handler and the process will still be terminated. However, the\n    // generated JavaScript code will be shown above the stack trace instead of\n    // the original source code.\n    if (installHandler && hasGlobalProcessEventEmitter()) {\n      uncaughtShimInstalled = true;\n      shimEmitUncaughtException();\n    }\n  }\n};\n\nexports.resetRetrieveHandlers = function() {\n  retrieveFileHandlers.length = 0;\n  retrieveMapHandlers.length = 0;\n\n  retrieveFileHandlers = originalRetrieveFileHandlers.slice(0);\n  retrieveMapHandlers = originalRetrieveMapHandlers.slice(0);\n\n  retrieveSourceMap = handlerExec(retrieveMapHandlers);\n  retrieveFile = handlerExec(retrieveFileHandlers);\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","module.exports = require(\"source-map\");","module.exports = require(\"fs\");","module.exports = require(\"buffer-from\");","/**\n * Created by lag on 06.02.2017.\n */\nclass CheckEnv {\n    /**\n     *\n     * @param envVar process.env\n     */\n    constructor(envVar) {\n        this.process = envVar;\n    }\n\n    /**\n     * pass an array containing the variable names\n     * @param array\n     */\n    setVariableNames(array) {\n        this.names = array.slice();\n    }\n\n    check() {\n        return this.names.filter(name => this.process[name]=== undefined);\n    }\n}\nmodule.exports = CheckEnv;","module.exports = require(\"serve-favicon\");","module.exports = require(\"express-winston\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"body-parser\");","\"use strict\";\nconst logger = require('winston');\nconst axios = require('axios').default;\nconst cheerio = require('cheerio');\nconst Parser = require(\"./parser-14\");\nclass Pageloader {\n\n    constructor() {\n        this.parser = new Parser.default();\n        this.cheerio = cheerio;\n        this.axios = axios;\n    }\n\n    parse(text) {\n        return this.parser.parse(text);\n    }\n\n    load(url_unused) {\n        return new Promise((resolve, reject) => {\n            let url = url_unused || 'https://www.lodur-zh.ch/duebendorf/index.php?modul=6';\n            this.axios.get(url, {responseEncoding: 'binary' })\n                .then(this.htmlToLines.bind(this))\n                .then(this.linesToEntries.bind(this))\n                .then(resolve)\n                .catch(reject);\n\n        });\n    }\n\n    htmlToLines(response) {\n        let html = response.data;\n        let $ = this.cheerio.load(html , {\n            normalizeWhitespace: true,\n            xmlMode: true\n        });\n        let contentsOfPage = $('div .content table');\n        let entries = [];\n        contentsOfPage.each(function (position, element) {\n            const entry = $(element);\n            entries.push(entry.text());\n        });\n        return entries;\n    }\n\n    linesToEntries(elements) {\n        elements.shift(); // remove Einsatzberichte des Jahres...\n        return elements.map(element => this.parse(element));\n    }\n\n    // handleException(ex, reject) {\n    //     LogEntry.create({\n    //         timestamp: new Date(),\n    //         text: 'pageloader - parser: uncaughtException',\n    //         error: JSON.stringify(ex),\n    //         description: ex.message + ex.stack\n    //     }, function (err) {\n    //         if (err === null) {\n    //             return;\n    //         }\n    //         console.log('persist new Entry ', err);\n    //     });\n    //     logger.log('error: pageloader parse', ex);\n    //     reject({'err-parse-contents-page': ex});\n    // }\n}\n\nexport default Pageloader;\n","module.exports = require(\"axios\");","module.exports = require(\"cheerio\");"],"sourceRoot":""}